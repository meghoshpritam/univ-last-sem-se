# -*- coding: utf-8 -*-
"""Norden_curve.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UE1Ey3dcc7znYIx6zx01aUUpMQdL-Lr-
"""

# Commented out IPython magic to ensure Python compatibility.
import math
import matplotlib.pyplot as plt
# %matplotlib inline
def Norden(k,td,t):
    return((k/pow(td,2))*t*math.exp((-t*t)/(2*td*td))) 

def R_curve(k,td,t):
    project_duration=3*int(td)
    y=[round(Norden(k,td,i),5) for i in range(0, project_duration)]
    
    plt.plot(y, color="blue", linewidth=4, label="Effort respect to time")
    plt.vlines(x=td,ymin=0,ymax=round(Norden(k,td,td),5),color="green", linestyle="dashed",linewidth=4,label=td)
    plt.vlines(x=t,ymin=0,ymax=round(Norden(k,td,t),5),color="red",linestyle="dashed", linewidth=4,label="t")
    plt.legend(loc="upper right")
    plt.xlabel("time")
    plt.ylabel("Effort per unit time")
    plt.title("r_curve")
    plt.show()
  


#if _name_== "_main_":
print("norden formula")
k=float(input("enter area under the curve(k):"))
td=float(input("enter the maximum value of curve(td):"))
t=float(input("Enter effort time(t) in month :"))
#p=2*(pow(td,2))
#q=pow(t,2)
#r=pow(2.7182,(-q/p))
#E=((k/pow(td,2))*t*r)
#print("E=",E,"PM")
print("required effort at time t, E--", round(Norden(k,td,t),5),"PM\n\n")
R_curve(k,td,t)